Versioning protocol

- All new versions of SWiFT store a main version number in the source code. The main version number reflects the progress of the application:
[major feature package].[minor feature package/noticable improvements exclusing bugfixes].[bugfixes + code improvements not noticeable to the user]
0.3.2
- The complete version is, by example:
0.3.2/develop/2013.05.21.14.30.20
which is:
[main version]/[git branchname]/[git date-time of latest commit]

   - code improvements not noticeable to user for example: making some code more elegant, changing database schemes. However, if the code clean up for example leads to code which is faster to the extent the user notices it, it should be put in the second number.
- the git information is read from the git repository itself!
- The location of the main version is in GlobalConstant.MAIN_VERSION
- the mainVersion.txt file should always be under version control.
- the main version file is only changed in the develop branch, not in the branches! First merge your changes into develop, and then change the version number.
- note that the part of the main version reflect a subversion: it are changes introduced after the main version, but which have not been consolidated with a new main version number. It is easy to read: it is main version 0.3.2 + the changes introduced in branch B up to the date D.

- All noteworthy changes,  between versions must be documented in the document version_history.html. Each set of changes between two subsequent versions must be divided into 2 categories:
   -  4user: changes which will change the experience of the user in some way (also for example includes improvements in speed of program executions which may be noticable to the user)
   - 4develop: all other changes.
